---
import { format, startOfWeek, addDays, isSameDay } from 'date-fns';
import { ru } from 'date-fns/locale';
import CalendarEvent from './CalendarEvent.astro';

type Event = {
  id: string;
  title: string;
  start: Date;
  end: Date;
  color?: string;
};

type Props = {
  events?: Event[];
};

const { events = [] } = Astro.props;
const today = new Date();
const weekStart = startOfWeek(today, { weekStartsOn: 1 });
const days = Array.from({ length: 7 }, (_, i) => addDays(weekStart, i));
const hours = Array.from({ length: 24 }, (_, i) => i);

const getEventsForDay = (day: Date) => {
  return events.filter(event => isSameDay(event.start, day));
};
---

<div class="calendar">
  <div class="calendar-header">
    <div class="time-column"></div>
    {days.map((day) => (
      <div class="day-header">
        <div class="day-name">{format(day, 'EEEE', { locale: ru })}</div>
        <div class="day-number">{format(day, 'd')}</div>
      </div>
    ))}
  </div>
  
  <div class="calendar-body">
    <div class="time-column">
      {hours.map((hour) => (
        <div class="time-slot">{`${hour}:00`}</div>
      ))}
    </div>
    
    <div class="days-grid">
      {days.map((day) => (
        <div class="day-column">
          <div class="time-grid">
            {hours.map((hour) => (
              <div class="grid-cell"></div>
            ))}
          </div>
          <div class="events-container">
            {getEventsForDay(day).map((event) => (
              <CalendarEvent event={event} />
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .calendar {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    border: 1px solid #e0e0e0;
  }

  .calendar-header {
    display: flex;
    border-bottom: 1px solid #e0e0e0;
    background: white;
    position: sticky;
    top: 0;
    z-index: 1;
  }

  .time-column {
    width: 60px;
    min-width: 60px;
    border-right: 1px solid #e0e0e0;
  }

  .day-header {
    flex: 1;
    text-align: center;
    padding: 8px;
    border-right: 1px solid #e0e0e0;
  }

  .day-name {
    font-size: 0.8em;
    color: #666;
  }

  .day-number {
    font-size: 1.2em;
    font-weight: bold;
  }

  .calendar-body {
    display: flex;
    flex: 1;
    overflow-y: auto;
    position: relative;
  }

  .days-grid {
    display: flex;
    flex: 1;
    min-width: 0;
    position: relative;
  }

  .day-column {
    flex: 1;
    border-right: 1px solid #e0e0e0;
    position: relative;
    height: calc(24 * 60px);
  }

  .time-grid {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
  }

  .grid-cell {
    height: 60px;
    border-bottom: 1px solid #e0e0e0;
    box-sizing: border-box;
  }

  .time-slot {
    height: 60px;
    padding: 4px 8px;
    box-sizing: border-box;
    text-align: right;
    color: #666;
    font-size: 0.8em;
    border-bottom: 1px solid #e0e0e0;
  }

  .events-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100%;
    pointer-events: none;
  }

  .event {
    pointer-events: auto;
  }
</style> 